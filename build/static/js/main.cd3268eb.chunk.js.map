{"version":3,"sources":["_DATA.js","actions/questions.js","actions/users.js","actions/shared.js","components/QuestionItem.js","components/UnansweredList.js","components/AnsweredList.js","components/Homepage.js","components/NotfoundPage.js","components/UnaPollItem.js","components/AnsPollItem.js","components/PollDetails.js","actions/authedUser.js","components/UserSelector.js","components/Nav.js","components/LeaderboardItem.js","components/Leaderboard.js","components/AddPoll.js","components/App.js","reducers/questions.js","reducers/users.js","reducers/authedUser.js","reducers/index.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","janedoe","id","name","avatarURL","answers","questions","carltompkins","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_getUsers","Promise","res","rej","setTimeout","_getQuestions","_saveQuestion","question","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","concat","receiveQuestions","type","receiveUsers","handleAddQuestion","questionObj","dispatch","then","addQuestion","addQuestionUser","catch","e","alert","connect","props","className","src","alt","to","state","allQuestionIds","Object","keys","sort","a","b","authedUserAnswerIds","unAnsweredIds","filter","questionId","includes","Fragment","length","map","key","answerIds","Homepage","showAnswered","onUnansweredClick","setState","onAnsweredClick","renderHomepage","onClick","this","Component","NotfoundPage","mapDispatchToProps","handleAddAnswer","qid","answer","_saveQuestionAnswer","console","log","pollid","undefined","onSubmit","evt","preventDefault","target","elements","poll","value","ansPollObject","htmlFor","totalVotes","optionOneVotes","optionTwoVotes","round","renderUI","ownProps","pollId","match","params","question_id","setAuthedUser","defaultValue","onChange","disabled","withRouter","onLogoutClick","history","push","exact","activeClassName","userTotals","el","userId","total","userIds","user","ui","AddPoll","onInputOneChange","trimStart","onInputTwoChange","onFormSubmit","one","two","placeholder","style","display","justifyContent","color","React","App","all","path","component","PollDetails","Leaderboard","action","combineReducers","logger","store","next","group","returnedValue","getState","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd3268eb.chunk.js","sourcesContent":["let users = {\r\n  janedoe: {\r\n    id: 'janedoe',\r\n    name: 'Jane Doe',\r\n    avatarURL: 'images/avatar-1.jpg',\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\r\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\r\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\r\n    },\r\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n  },\r\n  carltompkins: {\r\n    id: 'carltompkins',\r\n    name: 'Carl Tompkins',\r\n    avatarURL: 'images/avatar-2.jpg',\r\n    answers: {\r\n      \"vthrdm985a262al8qx3do\": 'optionOne',\r\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\r\n    },\r\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n  },\r\n  johndoe: {\r\n    id: 'johndoe',\r\n    name: 'John Doe',\r\n    avatarURL: 'images/avatar-3.jpg',\r\n    answers: {\r\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\r\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\r\n    },\r\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n  }\r\n}\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: '8xf0y6ziyjabvozdd253nd',\r\n    author: 'janedoe',\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: ['janedoe'],\r\n      text: 'have horrible short term memory',\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: 'have horrible long term memory'\r\n    }\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: '6ni6ok3ym7mf1p33lnez',\r\n    author: 'johndoe',\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'become a superhero',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe', 'janedoe'],\r\n      text: 'become a supervillain'\r\n    }\r\n  },\r\n  \"am8ehyc8byjqgar0jgpub9\": {\r\n    id: 'am8ehyc8byjqgar0jgpub9',\r\n    author: 'janedoe',\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be telekinetic',\r\n    },\r\n    optionTwo: {\r\n      votes: ['janedoe'],\r\n      text: 'be telepathic'\r\n    }\r\n  },\r\n  \"loxhs1bqm25b708cmbf3g\": {\r\n    id: 'loxhs1bqm25b708cmbf3g',\r\n    author: 'carltompkins',\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be a front-end developer',\r\n    },\r\n    optionTwo: {\r\n      votes: ['janedoe'],\r\n      text: 'be a back-end developer'\r\n    }\r\n  },\r\n  \"vthrdm985a262al8qx3do\": {\r\n    id: 'vthrdm985a262al8qx3do',\r\n    author: 'carltompkins',\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: ['carltompkins'],\r\n      text: 'find $50 yourself',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe'],\r\n      text: 'have your best friend find $500'\r\n    }\r\n  },\r\n  \"xj352vofupe1dqz9emx13r\": {\r\n    id: 'xj352vofupe1dqz9emx13r',\r\n    author: 'johndoe',\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: ['johndoe'],\r\n      text: 'write JavaScript',\r\n    },\r\n    optionTwo: {\r\n      votes: ['carltompkins'],\r\n      text: 'write Swift'\r\n    }\r\n  },\r\n}\r\n\r\nfunction generateUID () {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n}\r\n\r\nexport function _getUsers () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...users}), 1000)\r\n  })\r\n}\r\n\r\nexport function _getQuestions () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...questions}), 1000)\r\n  })\r\n}\r\n\r\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText,\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText,\r\n    }\r\n  }\r\n}\r\n\r\nexport function _saveQuestion (question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion\r\n      }\r\n      \r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\r\n        }\r\n      }\r\n\r\n      res(formattedQuestion)\r\n    }, 1000)\r\n  })\r\n}\r\n\r\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer\r\n          }\r\n        }\r\n      }\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser])\r\n          }\r\n        }\r\n      }\r\n\r\n      res()\r\n    }, 500)\r\n  })\r\n}\r\n","// Import getQuestions async API function.\r\nimport { _getQuestions } from '../_DATA';\r\n\r\nconst RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\r\nconst ADD_QUESTION = 'ADD_QUESTION';\r\n\r\nconst receiveQuestions = (questions) => ({\r\n    type: RECEIVE_QUESTIONS,\r\n    questions\r\n});\r\n\r\n// Thunk action creator to request all questions in database.\r\nconst handleReceiveQuestions = () => {\r\n    return (dispatch) => {\r\n        // Request all questions from database.\r\n        return _getQuestions()\r\n        // dispatch receivequestions action with result from _getQuestions async request.\r\n        .then((questions) => {\r\n            // console.log(questions);\r\n            dispatch(receiveQuestions(questions))\r\n        })\r\n    }\r\n};\r\n\r\nconst addQuestion = (question) => ({\r\n    type: ADD_QUESTION,\r\n    question\r\n});\r\n\r\nexport {RECEIVE_QUESTIONS, ADD_QUESTION, receiveQuestions, handleReceiveQuestions, addQuestion}; ","import { _getUsers } from '../_DATA';\r\nconst RECEIVE_USERS = 'RECEIVE_USERS';\r\nconst ADD_QUESTION_USER = 'ADD_QUESTION_USER';\r\n\r\nconst receiveUsers = (users) => ({\r\n    type: RECEIVE_USERS,\r\n    users\r\n});\r\n\r\n// Thunk action creator to request all users from database.\r\nconst handleReceiveUsers = () => {\r\n    return dispatch => {\r\n        // Request all users from database.\r\n        return _getUsers()\r\n        // dispatch receiveUsers action with result from _getUsers async request.\r\n        .then(users => {\r\n            dispatch(receiveUsers(users))\r\n        })\r\n    }\r\n};\r\n\r\n// Action creator to add newly added question's id to the questions piece of redux store state.\r\nconst addQuestionUser = (question) => ({\r\n    type:ADD_QUESTION_USER,\r\n    question\r\n});\r\n\r\nexport {RECEIVE_USERS, ADD_QUESTION_USER, receiveUsers, handleReceiveUsers, addQuestionUser};\r\n\r\n","import { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from '../_DATA';\r\nimport { receiveQuestions, addQuestion } from './questions';\r\nimport { receiveUsers, addQuestionUser } from './users';\r\n\r\n// ADD_ANSWER action type.\r\nconst ADD_ANSWER = 'ADD_ANSWER';\r\n\r\n// Thunk action creator for loading initial data.\r\nconst getInitialData = () => {\r\n    return (dispatch) => {\r\n        // Call async API functions to retrive users and questions from database.\r\n        return Promise.all([\r\n            _getUsers(),\r\n            _getQuestions(),\r\n        ])\r\n        // Dispatch receiveUsers and receiveQuestions actions with response from API functions.\r\n        .then(([users, questions]) => {\r\n            dispatch(receiveUsers(users));\r\n            dispatch(receiveQuestions(questions));\r\n        })\r\n        .catch(e => {\r\n            console.log('Unable to load initial user and question data.', e);\r\n        })\r\n    }\r\n};\r\n\r\n// Action creator to add poll answer to both users and questions pieces of redux store state.\r\nconst addAnswer = ({authedUser, qid, answer}) => ({\r\n    type: ADD_ANSWER,\r\n    authedUser,\r\n    qid,\r\n    answer\r\n});\r\n\r\n// Thunk action creator to add poll answer to both users and questions pieces of redux store state and update backend using _saveQuestionAnswer async function.\r\nconst handleAddAnswer = (questionObj) => {\r\n    return (dispatch) => {\r\n        dispatch(addAnswer(questionObj));\r\n        _saveQuestionAnswer(questionObj)\r\n        .catch(e => console.log('Unable to add answer to database', e));\r\n    }\r\n};\r\n\r\n// Thunk action creator for adding question to database asynchronously and to redux store.\r\nconst handleAddQuestion = (questionObj) => {\r\n    return(dispatch) => {\r\n        // Call API async function to save question to DB.\r\n        return _saveQuestion(questionObj)\r\n        .then((question) => {\r\n            dispatch(addQuestion(question));\r\n            dispatch(addQuestionUser(question));\r\n        })\r\n        .catch(e => {\r\n            alert('Error adding new poll, please try again!', e);\r\n        });\r\n    }\r\n};\r\n\r\nexport {getInitialData as default, ADD_ANSWER, handleAddAnswer, handleAddQuestion};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n// Import stylesheet\r\nimport '../styles/components/questionItem.css';\r\n\r\nconst QuestionItem = (props) => {\r\n    return (\r\n        <div className=\"middle aligned item\">\r\n            <img \r\n                className=\"ui avatar image\" \r\n                src={props.users[props.questions[props.id].author].avatarURL}\r\n                alt={`${props.users[props.questions[props.id].author].name}'s avatar`}\r\n            />\r\n            <div className=\"content\">\r\n                <h4 className=\"ui header\">{props.users[props.questions[props.id].author].name} asked:</h4>\r\n                <h2 className=\"ui header\">Would you Rather</h2>\r\n                <div className=\"description\">\r\n                    <p>...{[props.question.optionOne.text]}...</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"extra\">\r\n                <Link \r\n                    className=\"ui right floated button\"\r\n                    to={`questions/${props.id}`}>\r\n                    View Poll\r\n                    <i className=\"right chevron icon\"></i>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = ({questions, users, authedUser}, {id}) => {\r\n    const question = questions[id];\r\n    const author = users[question.author];\r\n\r\n    return {\r\n        question,\r\n        author,\r\n        questions,\r\n        users,\r\n        authedUser,\r\n        id\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(QuestionItem);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport QuestionItem from './QuestionItem';\r\n\r\nconst UnansweredList = (props) => {\r\n    // Array of  all question ids for all questions answered by currently authenticated user.\r\n    const authedUserAnswerIds = Object.keys(props.users[props.authedUser].answers);\r\n    const unAnsweredIds = props.allQuestionIds.filter(questionId => !authedUserAnswerIds.includes(questionId));\r\n    return (\r\n        <React.Fragment>\r\n            <h1>Un-Answered Questions</h1>\r\n            {unAnsweredIds.length > 0 ? (\r\n                <div className=\"ui segment\">\r\n                    <div className=\"ui very relaxed divided items\">\r\n                        {unAnsweredIds.map(id => (\r\n                            <React.Fragment key={id}>\r\n                                <QuestionItem id={id}/>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            ) : \r\n            (\r\n                <div className=\"ui segment\">\r\n                    <h3>{props.users[props.authedUser].name} has no un-answered questions.</h3>\r\n                </div>\r\n            )\r\n        }\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    allQuestionIds: Object.keys(state.questions).sort((a,b) => state.questions[b].timestamp - state.questions[a].timestamp),\r\n    questions: state.questions,\r\n    users: state.users,\r\n    authedUser: state.authedUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(UnansweredList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport QuestionsItem from './QuestionItem';\r\n\r\nconst AnsweredList = (props) => {\r\n    // Array of question ids for all questions answered by currently authenticated user.\r\n    const authedUserAnswerIds = Object.keys(props.users[props.authedUser].answers);\r\n    // Sorted array of all questions answered by currently authenticated user.\r\n    const answerIds = props.allQuestionIds.filter(questionId => authedUserAnswerIds.includes(questionId));\r\n    return (\r\n        <React.Fragment>\r\n            <h1>Answered Questions</h1>\r\n            {answerIds.length > 0 ? (\r\n                <div className=\"ui segment\">\r\n                    <div className=\"ui very relaxed divided items\">\r\n                        {answerIds.map(id => (\r\n                            <React.Fragment key={id}>\r\n                                <QuestionsItem id={id}/>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            ) : \r\n            (\r\n                <div className=\"ui segment\">\r\n                    <h3>{props.users[props.authedUser].name} has no answered questions.</h3>\r\n                </div>\r\n            )\r\n        }\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    allQuestionIds: Object.keys(state.questions).sort((a, b) => state.questions[b].timestamp - state.questions[a].timestamp),\r\n    users: state.users,\r\n    authedUser: state.authedUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(AnsweredList);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UnansweredList from './UnansweredList';\r\nimport AnsweredList from './AnsweredList';\r\nimport '../styles/components/homePage.css';\r\n\r\nclass Homepage extends Component {\r\n    state = {\r\n        showAnswered: false\r\n    };\r\n    onUnansweredClick = () => {\r\n        this.setState(() => ({\r\n            showAnswered: false\r\n        }));\r\n    };\r\n    onAnsweredClick = () => {\r\n        this.setState(() => ({\r\n            showAnswered: true\r\n        }));\r\n    };\r\n    // Declare function to conditionally render homepage UI content\r\n    renderHomepage = () => {\r\n        const homepage = this.props.authedUser !== null ? \r\n        (\r\n            <React.Fragment>\r\n                <div id=\"buttons-container\">\r\n                    {this.state.showAnswered ? <button className=\"ui button\" to=\"/\" onClick={this.onUnansweredClick}>\r\n                    Click here to view Un-answered Questions\r\n                    </button> :\r\n                    <button className=\"ui blue button\" to=\"/\" onClick={this.onAnsweredClick}>\r\n                        Answered Questions\r\n                    </button>\r\n                    }\r\n                </div>\r\n                {this.state.showAnswered ? <AnsweredList /> : <UnansweredList />}\r\n            </React.Fragment> \r\n        ) : \r\n            <React.Fragment>\r\n                <h2>Welcome</h2>\r\n                <h3>Please login at the top right to continue</h3>\r\n            </React.Fragment>;\r\n        return homepage;\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\">\r\n                {this.renderHomepage()}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n// State from the redux store that will be passed to this component as props.\r\nconst mapStateToProps = ({authedUser}) => ({\r\n    authedUser\r\n}); \r\n\r\n// Turn Homepage into a container component connecting it to the redux store via connect().\r\nexport default connect(mapStateToProps)(Homepage);\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotfoundPage = () => (\r\n    <div>\r\n        <h3>404 Page not found!</h3>\r\n        <Link className=\"ui blue button\" to=\"/\">Return Home</Link>\r\n    </div>\r\n);\r\n\r\nexport default NotfoundPage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport NotfoundPage from './NotfoundPage';\r\nimport { handleAddAnswer } from '../actions/shared';\r\nimport '../styles/components/unaPollItem.css';\r\n\r\nconst UnaPollItem = (props) => {\r\n    const onFormSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        const answer = evt.target.elements.poll.value;\r\n        // Array of currently logged in user's answer ids.\r\n        const authedUserAnswerIds = Object.keys(props.users[props.authedUser].answers);\r\n        if(authedUserAnswerIds.includes(props.pollid)) {\r\n            alert(`You've already voted on this poll`);\r\n        } else {\r\n            // Declare object to hold all key properties for poll that has just been voted on.\r\n            const ansPollObject = {\r\n                authedUser: props.authedUser,\r\n                qid: props.pollid,\r\n                answer\r\n            }\r\n            // Dispatch actions to update users and questions state in redux store, as well as backend database when a poll is voted on.\r\n            props.handleAddAnswer(ansPollObject);\r\n        }\r\n    };\r\n\r\n    return (\r\n        props.questions[props.pollid] === undefined ? <NotfoundPage /> :\r\n        <div className=\"ui centered card\">\r\n            <div className=\"content\" id=\"avatar\">\r\n                <img \r\n                    className=\"ui avatar image\" \r\n                    src={'/' + props.users[props.questions[props.pollid].author].avatarURL}\r\n                    alt={`${props.users[props.questions[props.pollid].author].name}'s avatar`}\r\n                />\r\n                {props.users[props.questions[props.pollid].author].name} asks:\r\n            </div>\r\n            <div className=\"content\">\r\n                <h2 className=\"ui header\">Would you Rather</h2>\r\n                <div className=\"description\">\r\n                    <form className=\"ui form\" onSubmit={onFormSubmit}>\r\n                        <div className=\"grouped fields\">\r\n                            <div className=\"field\">\r\n                                <div className=\"ui radio checkbox\">\r\n                                    <input type=\"radio\" id=\"opt-one\" name=\"poll\" value=\"optionOne\" />\r\n                                    <label htmlFor=\"opt-one\">{props.questions[props.pollid].optionOne.text}</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <div className=\"ui radio checkbox\">\r\n                                    <input type=\"radio\" id=\"opt-two\" name=\"poll\" value=\"optionTwo\" />\r\n                                    <label htmlFor=\"opt-two\">{props.questions[props.pollid].optionTwo.text}</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"fluid ui blue button\" type=\"submit\">Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({users, questions, authedUser}, {pollid}) => ({\r\n    users,\r\n    questions,\r\n    authedUser,\r\n    pollid\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    handleAddAnswer  \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UnaPollItem);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport NotfoundPage from './NotfoundPage';\r\nimport '../styles/components/ansPollItem.css';\r\n\r\nconst AnsPollItem = (props) => {\r\n    const renderUI = () => {\r\n        const {users, questions, authedUser, pollid} = props;\r\n        // Calculate total number votes for selected question.\r\n        const totalVotes = questions[pollid].optionOne.votes.length + questions[pollid].optionTwo.votes.length;\r\n        // Calculate number votes for selected poll's 1st option.\r\n        const optionOneVotes = questions[pollid].optionOne.votes.length;\r\n        // Calculate number votes for selected poll's 2nd option.\r\n        const optionTwoVotes = questions[pollid].optionTwo.votes.length;\r\n        // Conditionally render poll details UI.\r\n        if(questions[pollid] === undefined) {\r\n            return <NotfoundPage />\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <h1 className=\"ui header\" id=\"results-header\">Poll Results</h1>\r\n                    <div className=\"ui centered card\">\r\n                        <div className=\"content\" id=\"avatar\">\r\n                            <img \r\n                                className=\"ui avatar image\" \r\n                                src={'/' + props.users[props.questions[props.pollid].author].avatarURL}\r\n                                alt={`${props.users[props.questions[props.pollid].author].name}'s avatar`} \r\n                            />\r\n                            {users[questions[pollid].author].name} asked:\r\n                        </div>\r\n                        <div className=\"content\">\r\n                            <h2 className=\"ui header\">Would you Rather</h2>\r\n                            <div className=\"description\">\r\n                                {questions[pollid].optionOne.votes.includes(authedUser) && <div className=\"ui pointing below red basic label\">Your selection</div>}\r\n                                <p>{questions[pollid].optionOne.text} </p>\r\n                                \r\n                            </div>\r\n                            <div className=\"label-container\">\r\n                                <div className=\"ui blue label\">\r\n                                    <p>{questions[pollid].optionOne.votes.length} {optionOneVotes !== 1 ? 'votes ' : 'vote '}  |\r\n                                    {` ${Math.round(optionOneVotes / totalVotes * 100)} %`}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"content\">\r\n                            <div className=\"description\">\r\n                                {questions[pollid].optionTwo.votes.includes(authedUser) && <div className=\"ui pointing below red basic label\"> your selection</div>}\r\n                                <p>{questions[pollid].optionTwo.text} </p>\r\n                                \r\n                            </div>\r\n                            <div className=\"label-container\">\r\n                                <div className=\"ui blue label\">\r\n                                    <p>{questions[pollid].optionTwo.votes.length} {optionTwoVotes !== 1 ? 'votes ' : 'vote '}  | \r\n                                    {` ${Math.round(optionTwoVotes / totalVotes * 100)} %`}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"ui container\">\r\n            {renderUI()}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({users, questions, authedUser}, {pollid}) => ({\r\n    users,\r\n    questions,\r\n    authedUser,\r\n    pollid\r\n});\r\n\r\nexport default connect(mapStateToProps)(AnsPollItem);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UnanPollItem from './UnaPollItem';\r\nimport AnsPollItem from './AnsPollItem';\r\n\r\nconst PollDetails = (props) => {\r\n    const renderUI = () => {\r\n        // Check whether user is logged in.\r\n        if(props.authedUser !== null) {\r\n            // Create an array of the currently logged in user's answer IDs.\r\n            const authedUserAnswerIds = Object.keys(props.users[props.authedUser].answers);\r\n            return (\r\n                <React.Fragment>\r\n                    {authedUserAnswerIds.includes(props.pollId) ? <AnsPollItem pollid={props.pollId}/> :\r\n                    <UnanPollItem pollid={props.pollId} />}\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return <h3>Please login at the top right to view poll details</h3>\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"ui container\">\r\n            {renderUI()}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({users, authedUser}, ownProps) => ({\r\n    users,\r\n    authedUser,\r\n    pollId: ownProps.match.params.question_id\r\n});\r\n\r\nexport default connect(mapStateToProps)(PollDetails);","const SET_AUTHED_USER = 'SET_AUTHED_USER';\r\n\r\nconst setAuthedUser = (id) => ({\r\n    type: SET_AUTHED_USER,\r\n    id\r\n});\r\n\r\nexport {SET_AUTHED_USER, setAuthedUser};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setAuthedUser } from '../actions/authedUser';\r\n\r\nconst UserSelector = ({setAuthedUser}) => {\r\n    const onChangeHandler = evt => {\r\n        const value = evt.target.value;\r\n        // dispatch action creator to set authedUser state in redux store to currently selected user.\r\n        setAuthedUser(value);\r\n    };\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"ui item\">\r\n                <label htmlFor=\"user-select\">Login</label>\r\n            </div>\r\n            <select\r\n                className=\"ui selection dropdown\" \r\n                defaultValue=\"\" \r\n                name=\"users\" \r\n                id=\"user-select\"\r\n                onChange={onChangeHandler}\r\n            >\r\n                <option disabled value=\"\">--Select a user to login--</option>\r\n                <option value=\"janedoe\">Jane Doe</option>\r\n                <option value=\"carltompkins\">Carl Tompkins</option>\r\n                <option value=\"johndoe\">John Doe</option>\r\n            </select>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n// Declare MapDispatchToProps object for setAuthedUser action creator.\r\nconst mapDispatchToProps = {\r\n    setAuthedUser\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(UserSelector);\r\n\r\n","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport UserSelector from './UserSelector';\r\nimport { setAuthedUser } from '../actions/authedUser';\r\n// Import component stylesheet.\r\nimport '../styles/components/nav.css';\r\n\r\nconst Nav = props => {\r\n    const onLogoutClick = () => {\r\n        // Dispatch action creator to set authedUser redux store state to value of null.\r\n        props.dispatch(setAuthedUser(null));\r\n        // Redirect to homepage on logout.\r\n        props.history.push('/');\r\n    };\r\n\r\n    const renderLogin = () => {\r\n        if(props.authedUser === null) {\r\n            return <UserSelector />;\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"user-info\">\r\n                        <img \r\n                            className=\"ui avatar image\" \r\n                            src={'/' + props.users[props.authedUser].avatarURL}\r\n                            alt={`${props.users[props.authedUser].name}'s avata`} \r\n                        />\r\n                        <span>{props.users[props.authedUser].name}</span>\r\n                        <button className=\"ui tiny button\" onClick={onLogoutClick}>Logout</button>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"ui container\" id=\"nav-container\">\r\n            <div className=\"ui secondary pointing menu\">\r\n                <NavLink className=\"blue item\" to=\"/\" exact activeClassName=\"active\">Home</NavLink>\r\n                <NavLink className=\"blue item\" to=\"/add\" activeClassName=\"active\">Add Poll</NavLink>\r\n                <NavLink className=\"blue item\" to=\"/leaderboard\" activeClassName=\"active\">Leaderboard</NavLink>\r\n                <div className=\"right menu\">\r\n                    {renderLogin()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({authedUser, users}) => ({\r\n    authedUser,\r\n    users\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(Nav));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst LeaderboardItem = props => {\r\n    return (\r\n        <tbody>\r\n            <tr>\r\n                <td>\r\n                    <h4 className=\"ui image header\">\r\n                        <img \r\n                            className=\"ui avatar image\" \r\n                            src={'/' + props.users[props.id].avatarURL} \r\n                            alt={`${props.users[props.id].name}'s avatar`}\r\n                        />\r\n                        <div className=\"content\">\r\n                            {props.users[props.id].name}\r\n                        </div>\r\n                    </h4>\r\n                </td>\r\n                <td>{Object.keys(props.users[props.id].answers).length}</td>\r\n                <td>{props.users[props.id].questions.length}</td>\r\n            </tr>\r\n        </tbody>\r\n    );\r\n};\r\n\r\nconst mapStateToProp = ({users}, {id}) => ({\r\n    users,\r\n    id\r\n});\r\n\r\nexport default connect(mapStateToProp)(LeaderboardItem);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LeaderboardItem from './LeaderboardItem';\r\n\r\nconst Leaderboard = props => {\r\n    const ui = props.authedUser === null ? <h3>Please login at the top right to continue to the homepage</h3> :\r\n    (\r\n        <React.Fragment>\r\n            <h1 className=\"header-text\">Leaderboard</h1>\r\n                <table className=\"ui blue celled padded table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th><h3>UserName</h3></th>\r\n                            <th><h3>Answered</h3></th>\r\n                            <th><h3>Asked</h3></th>\r\n                        </tr>\r\n                    </thead>\r\n                    {props.userIds.map(id => <LeaderboardItem key={id} id={id} />)}\r\n                </table>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className=\"ui container\">\r\n            {ui}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({users, authedUser}) => {\r\n    // Return a new array that has an object for each user's id and their total for created and answered questions\r\n    let userTotals = Object.keys(users).map(el => {\r\n        return {\r\n            userId: el,\r\n            total: (users[el].questions.length + Object.keys(users[el].answers).length)\r\n        }\r\n    });\r\n    // Sort userTotals array in descending order by each element object's total property.\r\n    userTotals = userTotals.sort((a, b) => {\r\n        if(b.total > a.total) {\r\n            return 1\r\n        } else {\r\n            return -1\r\n        }\r\n    }); \r\n    // Modify sorted array to return only user ids as strings.\r\n    const userIds = userTotals.map(user => user.userId);\r\n    return {\r\n        userIds, // Array of user ids sorted in descending order by on user totals.\r\n        authedUser\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Leaderboard);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { handleAddQuestion } from '../actions/shared';\r\n// Import addPoll stylesheet.\r\nimport '../styles/components/addPoll.css';\r\n\r\nclass AddPoll extends React.Component {\r\n    // component based state to hold poll option text values.\r\n    state = {\r\n        optionOne: '',\r\n        optionTwo: ''\r\n    };\r\n\r\n    onInputOneChange = (evt) => {\r\n        const optionOne = evt.target.value.trimStart();\r\n        this.setState(() => ({\r\n            optionOne\r\n        }));\r\n    };\r\n    \r\n    onInputTwoChange = (evt) => {\r\n        const optionTwo = evt.target.value.trimStart();\r\n        this.setState(() => ({\r\n            optionTwo\r\n        }));\r\n    };\r\n    \r\n    onFormSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        if(evt.target.elements.one.value === '' || evt.target.elements.two.value === '') {\r\n            alert('Please fill in both fields before submitting.');\r\n        } else {\r\n        // Add question to redux store.\r\n            const optionOneText = this.state.optionOne;\r\n            const optionTwoText = this.state.optionTwo;\r\n            const author = this.props.authedUser;\r\n            // Create question object to pass into action creator.\r\n            const question = {\r\n                author,\r\n                optionOneText,\r\n                optionTwoText\r\n            };\r\n            // Dispatch handleAddQuestion thunk action creator.\r\n            this.props.dispatch(handleAddQuestion(question));\r\n            // Redirect to homepage.\r\n            this.props.history.push('/');\r\n        }\r\n    };\r\n    \r\n    renderUI = () => {\r\n        const {optionOne, optionTwo} = this.state;\r\n        const {authedUser} = this.props;\r\n        if(authedUser !== null) {\r\n            return (\r\n                <React.Fragment>\r\n                    <h1 className=\"header\">Add Poll</h1>\r\n                    <div className=\"ui segment\">\r\n                        <h2 className=\"ui header\">Would you Rather</h2>\r\n                        <div>\r\n                            <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                                <div className=\"field\">\r\n                                    <label htmlFor=\"option-one\">Option One</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        id=\"option-one\" \r\n                                        placeholder=\"Please enter 1st option.\" \r\n                                        value={optionOne}\r\n                                        name=\"one\"\r\n                                        onChange={this.onInputOneChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label htmlFor=\"option-two\">Option Two</label>\r\n                                    <input \r\n                                        type=\"text\"\r\n                                        id=\"option-two\"\r\n                                        placeholder=\"Please enter 2nd option.\"\r\n                                        value={optionTwo}\r\n                                        name=\"two\"\r\n                                        onChange={this.onInputTwoChange}\r\n                                    />\r\n                                </div>\r\n                                <div style={{display: \"flex\", justifyContent: \"space-between\"}} className=\"addpoll-btn-container\">\r\n                                    {optionOne !== '' && optionTwo !== '' ? <p></p> : <p style={{color: 'red'}}>\r\n                                    Please fill in both fields before submitting.\r\n                                    </p>}\r\n                                    <button className=\"ui blue button\" type=\"submit\" disabled={optionOne === '' || optionTwo === ''}>Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return <h3>Please login at the top right to continue</h3>\r\n        }\r\n    };\r\n\r\n     render() {\r\n         return (\r\n             <div className=\"ui container\">\r\n                {this.renderUI()}\r\n             </div>\r\n         );\r\n     }\r\n};\r\n\r\nconst mapStateToProps = ({authedUser}) => ({\r\n    authedUser\r\n});\r\n\r\nexport default connect(mapStateToProps)(AddPoll);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport '../styles/base/App.css';\r\nimport getInitialData from  '../actions/shared';\r\nimport Homepage from './Homepage';\r\n// Import 404 page component.\r\nimport NotfoundPage from './NotfoundPage';\r\nimport PollDetails from './PollDetails';\r\nimport Nav from './Nav';\r\nimport Leaderboard from './Leaderboard';\r\nimport AddPoll from './AddPoll';\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    // Load intial data into redux store.\r\n    this.props.dispatch(getInitialData());\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Nav />\r\n        <Switch>\r\n          <Route path=\"/\" exact  component={Homepage} />\r\n          <Route path=\"/questions/:question_id\" component={PollDetails} />\r\n          <Route path=\"/add\" exact component={AddPoll} />\r\n          <Route path=\"/leaderboard\" exact component={Leaderboard} />\r\n          <Route component={NotfoundPage} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default connect()(App);\r\n","import { RECEIVE_QUESTIONS, ADD_QUESTION } from '../actions/questions';\r\nimport { ADD_ANSWER } from '../actions/shared';\r\n\r\n// Questions reducer, has default state of an empty object {}.\r\nconst questions = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case RECEIVE_QUESTIONS:\r\n            return {...state, ...action.questions}\r\n        case ADD_ANSWER:\r\n            return {\r\n                ...state,\r\n                [action.qid] : {\r\n                    ...state[action.qid],\r\n                    [action.answer] : {\r\n                        ...state[action.qid][action.answer],\r\n                        votes: state[action.qid][action.answer].votes.includes(action.authedUser) ? [...state[action.qid][action.answer].votes] : state[action.qid][action.answer].votes.concat([action.authedUser])\r\n                    }\r\n                }\r\n            }\r\n        case ADD_QUESTION:\r\n            return {\r\n                ...state,\r\n                [action.question.id]: {\r\n                    ...action.question\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default questions;","import { RECEIVE_USERS, ADD_QUESTION_USER } from '../actions/users';\r\nimport { ADD_ANSWER } from '../actions/shared';\r\n\r\n// Users reducer, has default state of an empty object {}.\r\nconst users = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case RECEIVE_USERS:\r\n            return {\r\n                ...state, \r\n                ...action.users\r\n            };\r\n        case ADD_ANSWER:\r\n            return {\r\n                ...state,\r\n                [action.authedUser]: {\r\n                    ...state[action.authedUser],\r\n                    answers: {\r\n                        ...state[action.authedUser].answers,\r\n                        [action.qid]: action.answer\r\n                    }\r\n                }\r\n            }\r\n        case ADD_QUESTION_USER:\r\n            return {\r\n                ...state,\r\n                [action.question.author]: {\r\n                    ...state[action.question.author],\r\n                    questions: [...state[action.question.author].questions, action.question.id]\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default users;","import { SET_AUTHED_USER } from '../actions/authedUser';\r\n\r\nconst authedUser = (state = null, action) => {\r\n    switch(action.type) {\r\n        case SET_AUTHED_USER:\r\n            return action.id;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authedUser;","import { combineReducers } from 'redux';\r\nimport questions from './questions';\r\nimport users from './users';\r\nimport authedUser from './authedUser';\r\n\r\n// Call combinereducers passing in all 3 reducers as object property values.\r\nexport default combineReducers({\r\n    questions,\r\n    users,\r\n    authedUser\r\n});","// Logger middleware.\r\nconst logger = (store) => (next) => (action) => {\r\n    console.group(action.type);\r\n    console.log('The action: ', action);\r\n    const returnedValue = next(action);\r\n    console.log('The new state: ', store.getState());\r\n    console.groupEnd();\r\n    return returnedValue;\r\n};\r\n\r\nexport default logger;","import { applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n// Import logger middleware.\r\nimport logger from './logger';\r\n\r\n// Call applyMiddleware passing in all middleware.\r\nexport default applyMiddleware(thunk, logger);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n// Import reducers from combineReducers function call.\r\nimport reducer from './reducers';\r\n// Import middleware from applyMiddleware function call.\r\nimport middleware from './middleware';\r\n\r\n// CREATE REDUX STORE.\r\nconst store = createStore(reducer, middleware);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>, \r\n    document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}